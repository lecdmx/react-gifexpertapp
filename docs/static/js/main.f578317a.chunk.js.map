{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","Hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EAEdC,mBAAS,IAFK,mBAE3CC,EAF2C,KAE/BC,EAF+B,KAqBlD,OAEC,sBAAMC,SAbc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAgB,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OAE1CN,EAAc,MAOf,SACC,uBACAO,KAAK,OAAOC,MAAQT,EACpBU,SAtBwB,SAACP,GAC1BQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,+BCTZK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,yFAKFI,MAAMF,GALJ,cAKfG,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KAIFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAdjB,kBAqBdM,GArBc,4CAAH,sDCENO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIxC,OACC,sBAAMc,UAAY,6CAAlB,UAEC,qBAAKC,IAAOf,EAAOgB,IAAMN,IACzB,4BAAKA,QCNIO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEjBhB,mBAAS,CAClCuB,KAAM,GACNa,SAAS,IAJiC,mBAEpCC,EAFoC,KAE7BC,EAF6B,KA6B3C,OAtBAC,qBAAU,WAETxB,EAAQC,GACPwB,MAAM,SAAAC,GAELC,YAAY,WAEXJ,EAAS,CACRf,KAAMkB,EACNL,SAAS,MAGR,UAMH,CAACpB,IAIGqB,EDzB2BM,CAAc3B,GAAlCa,EAH0B,EAGhCN,KAAca,EAHkB,EAGlBA,QAStB,OACC,qCACC,6BAAMpB,IAEJoB,GAAW,wCAEb,qBAAKJ,UAAY,YAAjB,SAGEH,EAAOJ,KAAK,SAAEC,GAAF,OAEZ,cAAC,EAAD,eAEMA,GADGA,EAAIC,aEvBLiB,EAAe,WAAM,IAAD,EAGK5C,mBAAS,CAAC,cAHf,mBAGzB6C,EAHyB,KAGb9C,EAHa,KAchC,OACE,gCACD,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAIA,6BAGG8C,EAAWpB,KAAI,SAACT,GAAD,OAEd,cAAC,EAAD,CAECA,SAAaA,GADNA,Y,MC5Bd8B,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.f578317a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories }) => {\r\n\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleInputChange = (e) =>{\r\n\t\tconsole.log(e.target.value);\r\n\t\tsetInputValue(e.target.value);\r\n\t\t\r\n\t}\r\n\r\n\tconst handleSubmit = (e) =>{\r\n\t\te.preventDefault();\r\n\r\n\t\tif (inputValue.trim().length > 2 ){\r\n\t\t\tsetCategories ( (c) => ( [ inputValue, ...c ]  ) );\r\n\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t\r\n\t\t<form onSubmit = { handleSubmit }>\r\n\t\t\t<input \r\n\t\t\ttype=\"text\" value={ inputValue }\r\n\t\t\tonChange = { handleInputChange }\r\n\t\t\t/>\r\n\t\t</form>\r\n\t\r\n\t)\r\n\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&offset=0&rating=g&lang=en&api_key=EOqpc2V87GweBoDAe9TvoJgrdkPjSG7V`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  // console.log(data);\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  // console.log(gifs);\r\n  //   setImages(gifs);\r\n\r\n  return gifs;\r\n};\r\n"," import React from 'react'\r\n \r\n export const GifGridItem = ({ id, title, url }) => {\r\n\r\n\t// console.log(id, title, url);\r\n\r\n\t return (\r\n\t\t <div  className = \"card animate__animated animate__backInLeft\">\r\n\t\t\t \r\n\t\t\t <img src= { url }  alt= {title} />\r\n\t \t\t<p>{ title }</p>\r\n\t\t </div>\r\n\t )\r\n }\r\n ","import React from 'react';\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\t\r\n\tconst { data: images, loading } = useFetchGifs( category );\r\n\r\n\t\r\n\t// console.log(loading);\r\n\t\r\n\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>{ category }</h3>\r\n\r\n\t\t\t{ loading && <p>Loading</p>  }\r\n\t\t\t\r\n\t\t\t<div className = \"card-grid\">\r\n\r\n\t\t\t\t{ \r\n\t\t\t\t\timages.map( ( img ) => \r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t<GifGridItem\r\n\t\t\t\t\t\tkey = { img.id }\r\n\t\t\t\t\t\t{ ...img } \r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\t\r\n\t\t\t\t}\t\t\t\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n\tconst [state, setstate] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tgetGifs(category)\r\n\t\t.then( imgs => {\r\n\r\n\t\t\t\tsetTimeout( () => {\r\n\t\t\t\r\n\t\t\t\t\tsetstate({\r\n\t\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\t\tloading: false\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t}, 3000);\r\n\r\n\t\t\t\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t}, [category])\r\n\r\n\r\n\r\n\treturn state;\r\n}\r\n\r\n","import React, { useState } from 'react';\r\n// import ReactDom from 'react-dom';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GitExpertApp = () =>{\r\n\r\n\r\n\tconst [categories, setCategories] =  useState(['one punch']);\r\n\r\n\t// let otroItem = 'otro item';\r\n\t// const handleAdd = () => {\r\n\t// \t//agregar item al array con funcion callback\r\n\t// \t// setCategories ( (c) => ( [ ...c, otroItem ]  ) );\r\n\t// \tconsole.log(categories);\r\n\t// \t//agregar item directo al array dentro\r\n\t// \tsetCategories( [ ...categories, otroItem ]);\r\n\t// }\r\n\r\n\treturn (\r\n\t  <div>\r\n\t\t<h2>GitExpertApp</h2>\r\n\t\t<AddCategory setCategories = { setCategories }/>\r\n\t\t<hr/>\r\n\t\t\r\n\t\t\r\n\r\n\t\t<ol>\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tcategories.map((category) =>(\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<GifGrid \r\n\t\t\t\t\t\t\tkey= { category } \r\n\t\t\t\t\t\t\tcategory = { category }/>\r\n\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\r\n\r\n\r\n\t\t</ol>\r\n\r\n\t  </div>\r\n\t);\r\n\t\r\n  \r\n  }\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GitExpertApp }  from './GitExpertApp'; \nimport './index.css';\n\nReactDOM.render(\n  \n  <GitExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}